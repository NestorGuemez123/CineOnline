@model VideoOnDemand.Web.Models.ModificadoEpisodioViewModel
@using VideoOnDemand.Entities

@{
    ViewBag.Title = Model.Nombre.ToString();
}

<h2>Editar episodio</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MediaId)
        @Html.HiddenFor(model => model.SerieId)
        @Html.HiddenFor(model => model.FechaRegistro)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DuracionMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DuracionMin, new { htmlAttributes = new { @class = "form-control", min = 1 } })
                @Html.ValidationMessageFor(model => model.DuracionMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaLanzamiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaLanzamiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaLanzamiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Temporada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Temporada, new { htmlAttributes = new { @class = "form-control", min = 1 } })
                @Html.ValidationMessageFor(model => model.Temporada, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            var selectedList = new SelectList(
                new List<SelectListItem> {
        new SelectListItem { Text = "VISIBLE", Value = EEstatusMedia.VISIBLE.ToString()},
        new SelectListItem { Text = "INVISIBLE", Value = EEstatusMedia.INVISIBLE.ToString()}
                }, "Value", "Text");
        }

        <div class="form-group">
            @Html.LabelFor(model => model.EstadosMedia, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EstadosMedia, selectedList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstadosMedia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la lista de episodios", "Index", new { id = Model.SerieId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
